set.objfn(lprec,objfn)
##Setting non-negativity bounds
set.bounds(lprec, lower = rep(0, (varCount+1)), upper = NULL)
##pi_{i,j}'s sum to 1
add.constraint(lprec, xt = c(rep(1,varCount),0), "=", rhs = scale)
##incorporating the restrictions
add.constraint(lprec, xt = c(restrictions,0), "=", rhs = 0)
##marginal cdf constraints
pij.matrix <- matrix(1:varCount, nrow = L, ncol = L)
for (i in 1:(L-1)){
add.constraint(lprec, xt = c(rep(1,L*i),-1), "<=", rhs = (cdf_C[i]*scale), indices = c(pij.matrix[1:i,],(varCount+1)))
add.constraint(lprec, xt = rep(1,L*i+1), ">=", rhs = (cdf_C[i]*scale), indices = c(pij.matrix[1:i,],(varCount+1)))
}
for (i in 1:(L-1)){
add.constraint(lprec, xt = c(rep(1,L*i),-1), "<=", rhs = (cdf_T[i]*scale), indices = c(pij.matrix[,1:i],(varCount+1)))
add.constraint(lprec, xt = rep(1,L*i+1), ">=", rhs = (cdf_T[i]*scale), indices = c(pij.matrix[,1:i],(varCount+1)))
}
##Solving linear program
eps.flag <- solve(lprec)
if(eps.flag != 0){
stop("WARNING: problem with LP for eps")
}
eps <- get.objective(lprec)/scale
if (eps < 10 ^ (-10)){
eps <- 0
}
rm(lprec)
#############################################################################
##LP for lb and ub##
#############################################################################
lprec <- make.lp(0,varCount)
##Setting objective function
objfn <- matrix(0, L, L)
for (i in 1:L){
for (j in 1:L){
if (ordinalScale[j]>ordinalScale[i]){
objfn[i,j] <- 1
}
}
}
objfn <- c(objfn)
set.objfn(lprec,objfn)
##Setting non-negativity bounds
set.bounds(lprec, lower = rep(0, varCount), upper = NULL)
##pi_{i,j}'s sum to 1
add.constraint(lprec, xt = rep(1,varCount), "=", rhs = scale)
##incorporating the restrictions
add.constraint(lprec, xt = restrictions, "=", rhs = 0)
##marginal cdf constraints
for (i in 1:(L-1)){
add.constraint(lprec, xt = rep(1,L*i), "<=", rhs = (cdf_C[i]+eps)*scale, indices = c(pij.matrix[1:i,]))
add.constraint(lprec, xt = rep(1,L*i), ">=", rhs = (cdf_C[i]-eps)*scale, indices = c(pij.matrix[1:i,]))
}
for (i in 1:(L-1)){
add.constraint(lprec, xt = rep(1,L*i), "<=", rhs = (cdf_T[i]+eps)*scale, indices = c(pij.matrix[,1:i]))
add.constraint(lprec, xt = rep(1,L*i), ">=", rhs = (cdf_T[i]-eps)*scale, indices = c(pij.matrix[,1:i]))
}
lb.flag <- solve(lprec)
if(lb.flag != 0){
stop("WARNING: problem with LP for lb")
}
lb <- get.objective(lprec)/scale
lp.control(lprec,sense='max')
ub.flag <- solve(lprec)
if(ub.flag != 0){
stop("WARNING: problem with LP for ub")
}
ub <- get.objective(lprec)/scale
return(c(lb,ub,eps))
}
}
########################################################################
##Setting inputs##
########################################################################
ordinalScale <- 1:2
maxBen <- 10000
maxHarm <- 0
nsim <- 10
########################################################################
##n = 100##
########################################################################
n <- 100
pC1 <- 0.5 + 1/sqrt(n) ##pC1 is P(YC = 1)
pC2 <- 1 - pC1 ##pC2 = P(YC = 2)
pT1 <- 0.5 ##pT1 is P(YT = 1)
pT2 <- 1-pT1 ##pT1 is P(YT = 2)
set.seed(785013)
result100 <- rep(NA, nsim)
for (i in 1:nsim){
data <- data.frame(A = sample(0:1, size = n, replace = TRUE), Y = NA)
data$Y[data$A == 0] <- sample(1:2, size = sum(data$A == 0), replace = TRUE, prob = c(pC1,pC2))
data$Y[data$A == 1] <- sample(1:2, size = sum(data$A == 1), replace = TRUE, prob = c(pT1,pT2))
result100[i] <- boundsNoCov_res(ordinalScale, data$Y[data$A == 1], data$Y[data$A == 0], maxBen, maxHarm)[1]
}
result100 <- result100*sqrt(n)-1
########################################################################
##n = 1000##
########################################################################
n <- 1000
pC1 <- 0.5 + 1/sqrt(n) ##pC1 is P(YC = 1)
pC2 <- 1 - pC1 ##pC2 = P(YC = 2)
pT1 <- 0.5 ##pT1 is P(YT = 1)
pT2 <- 1-pT1 ##pT1 is P(YT = 2)
set.seed(1165429)
result1000 <- rep(NA, nsim)
for (i in 1:nsim){
data <- data.frame(A = sample(0:1, size = n, replace = TRUE), Y = NA)
data$Y[data$A == 0] <- sample(1:2, size = sum(data$A == 0), replace = TRUE, prob = c(pC1,pC2))
data$Y[data$A == 1] <- sample(1:2, size = sum(data$A == 1), replace = TRUE, prob = c(pT1,pT2))
result1000[i] <- boundsNoCov_res(ordinalScale, data$Y[data$A == 1], data$Y[data$A == 0], maxBen, maxHarm)[1]
}
result1000 <- result1000*sqrt(n)-1
########################################################################
##n = 10000##
########################################################################
n <- 10000
pC1 <- 0.5 + 1/sqrt(n) ##pC1 is P(YC = 1)
pC2 <- 1 - pC1 ##pC2 = P(YC = 2)
pT1 <- 0.5 ##pT1 is P(YT = 1)
pT2 <- 1-pT1 ##pT1 is P(YT = 2)
set.seed(7692624)
result10000 <- rep(NA, nsim)
for (i in 1:nsim){
data <- data.frame(A = sample(0:1, size = n, replace = TRUE), Y = NA)
data$Y[data$A == 0] <- sample(1:2, size = sum(data$A == 0), replace = TRUE, prob = c(pC1,pC2))
data$Y[data$A == 1] <- sample(1:2, size = sum(data$A == 1), replace = TRUE, prob = c(pT1,pT2))
result10000[i] <- boundsNoCov_res(ordinalScale, data$Y[data$A == 1], data$Y[data$A == 0], maxBen, maxHarm)[1]
}
result10000 <- result10000*sqrt(n)-1
########################################################################
##n = 10^6##
########################################################################
n <- 10^6
pC1 <- 0.5 + 1/sqrt(n) ##pC1 is P(YC = 1)
pC2 <- 1 - pC1 ##pC2 = P(YC = 2)
pT1 <- 0.5 ##pT1 is P(YT = 1)
pT2 <- 1-pT1 ##pT1 is P(YT = 2)
set.seed(9816388)
resultMillion <- rep(NA, nsim)
for (i in 1:nsim){
data <- data.frame(A = sample(0:1, size = n, replace = TRUE), Y = NA)
data$Y[data$A == 0] <- sample(1:2, size = sum(data$A == 0), replace = TRUE, prob = c(pC1,pC2))
data$Y[data$A == 1] <- sample(1:2, size = sum(data$A == 1), replace = TRUE, prob = c(pT1,pT2))
resultMillion[i] <- boundsNoCov_res(ordinalScale, data$Y[data$A == 1], data$Y[data$A == 0], maxBen, maxHarm)[1]
}
resultMillion <- resultMillion*sqrt(n)-1
resultMillion
test <-sample(1:2, size = 10000, replace = TRUE, prob = c(pC1,pC2))
table(test)
table(test)/length(test)
test <-sample(1:2, size = 100000, replace = TRUE, prob = c(pC1,pC2))
table(test)/length(test)
factorial(200)
factorial(100)
factorial(100)/factorial(50)
factorial(100)/factorial(50)/factorial(50)
load("~/Desktop/regular/distributions_h0")
result100
rm(list=ls())
load("~/Dropbox/research/github/fraction-who-benefit/regular/distributions_h1.Rdata")
hist(result100)
hist(result1000)
hist(result10000)
hist(resultMillion)
h = hist(result100)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 100", ylab = "Proportion", xlab = "sqrt(n)*(lbHat - (lb + h/sqrt(n))")
h = hist(result100)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 100", ylab = "Proportion", xlab = "sqrt(n)*(estLB - trueLB)")
h = hist(result1000)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 100", ylab = "Proportion", xlab = "sqrt(n)*(estLB - trueLB)")
h = hist(result10000)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 100", ylab = "Proportion", xlab = "sqrt(n)*(estLB - trueLB)")
h = hist(resultMillion)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 100", ylab = "Proportion", xlab = "sqrt(n)*(estLB - trueLB)")
h = hist(result100)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 100", ylab = "Proportion", xlab = "sqrt(n)*(estLB - [trueLB + 1/sqrt(n)])")
h = hist(result1000)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 1,000", ylab = "Proportion", xlab = "sqrt(n)*(estLB - [trueLB + 1/sqrt(n)])")
h = hist(result10000)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 10,000", ylab = "Proportion", xlab = "sqrt(n)*(estLB - [trueLB + 1/sqrt(n)])")
h = hist(resultMillion)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 1,000,000", ylab = "Proportion", xlab = "sqrt(n)*(estLB - [trueLB + 1/sqrt(n)])")
rm(list=ls())
load("~/Dropbox/research/github/fraction-who-benefit/regular/distributions_h0.Rdata")
h = hist(result100)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 100", ylab = "Proportion", xlab = "sqrt(n)*(estLB - [trueLB + 0/sqrt(n)])")
h = hist(result1000)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 1,000", ylab = "Proportion", xlab = "sqrt(n)*(estLB - [trueLB + 0/sqrt(n)])")
h = hist(result10000)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 10,000", ylab = "Proportion", xlab = "sqrt(n)*(estLB - [trueLB + 0/sqrt(n)])")
h = hist(resultMillion)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE, main = "n = 1,000,000", ylab = "Proportion", xlab = "sqrt(n)*(estLB - [trueLB + 0/sqrt(n)])")
rm(list=ls())
rm(list=ls())
.25*.75
-.25*.25
-.25*.5
.5*.5
.25*.5
h1 = hist(result100, breaks = 50, probability = TRUE)
setwd("~/Dropbox/research/github/fraction-who-benefit/nonregular")
##For left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE)
h1$density = h1$counts/sum(h1$counts)
h2 = hist(result1000, breaks = 50)
h1 = hist(result100, breaks = 50, probability = TRUE)
h1 = hist(result100, probability = TRUE)
h2 = hist(result1000, breaks = 50, probability = TRUE)
h3 = hist(result10000, breaks = 50, probability = TRUE)
h4 = hist(resultMillion, breaks = 50, probability = TRUE)
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50)
h6 = hist(result1000, breaks = 50)
h7 = hist(result10000, breaks = 50)
h8 = hist(resultMillion, breaks = 50)
plot(h1)
rm(list=ls())
########################################################################
##Make plots##
########################################################################
setwd("~/Dropbox/research/github/fraction-who-benefit/nonregular")
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), main = "n = 10000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), main = "n = 1000000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), main = "n = 10000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), main = "n = 1000000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 11), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 11), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 10), main = "n = 1,000,000", xlab = "")
dev.off()
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 15), main = "n = 100", xlab = "")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
setwd("~/Dropbox/research/github/fraction-who-benefit/nonregular")
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 5), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 5), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 5), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 5), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 5), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 5), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 5), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 5), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 25, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 25, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 25, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 8), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 8), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 8), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 8), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 25, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 6), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 6), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 6), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 6), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 6), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 6), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 6), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 6), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1,000,000", xlab = "")
dev.off()
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 2), main = "n = 1,000,000", xlab = "")
dev.off()
rm(list=ls())
########################################################################
##Make plots##
########################################################################
setwd("~/Dropbox/research/github/fraction-who-benefit/nonregular")
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, 12), main = "n = 1,000,000", xlab = "")
dev.off()
rm(list=ls())
########################################################################
##Make plots##
########################################################################
setwd("~/Dropbox/research/github/fraction-who-benefit/nonregular")
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, .5), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, .5), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, .5), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, .5), main = "n = 1,000,000", xlab = "")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, .5), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, .5), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, .5), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-1,4.5), ylim = c(0, .5), main = "n = 1,000,000", xlab = "")
dev.off()
rm(list=ls())
rm(list=ls())
########################################################################
##Make plots##
########################################################################
setwd("~/Dropbox/research/github/fraction-who-benefit/nonregular")
pdf("nonregularPlot_SuppMat.pdf")
par(mfcol = c(4,2))
##Left panel
load("distributions_P0.Rdata")
h1 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-3,3), ylim = c(0, .5), main = "n = 100", xlab = "")
h2 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-3,3), ylim = c(0, .5), main = "n = 1000", xlab = "")
h3 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-3,3), ylim = c(0, .5), main = "n = 10,000", xlab = "")
h4 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-3,3), ylim = c(0, .5), main = "n = 1,000,000", xlab = "")
curve(dnorm(x, mean=0, sd=1), col="darkblue", lwd=2, add=TRUE, yaxt="n")
##Right panel
load("distributions_Pn.Rdata")
h5 = hist(result100, breaks = 50, probability = TRUE, xlim = c(-3,3), ylim = c(0, .5), main = "n = 100", xlab = "")
h6 = hist(result1000, breaks = 50, probability = TRUE, xlim = c(-3,3), ylim = c(0, .5), main = "n = 1000", xlab = "")
h7 = hist(result10000, breaks = 50, probability = TRUE, xlim = c(-3,3), ylim = c(0, .5), main = "n = 10,000", xlab = "")
h8 = hist(resultMillion, breaks = 50, probability = TRUE, xlim = c(-3,3), ylim = c(0, .5), main = "n = 1,000,000", xlab = "")
curve(dnorm(x, mean=0, sd=1), col="darkblue", lwd=2, add=TRUE, yaxt="n")
dev.off()
