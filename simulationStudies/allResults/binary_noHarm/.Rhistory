}
s <- sqrt(n)*(estimate - truth)
boxplot(s)
h <- hist(sqrt(n)*(estimate-truth))
h$density <- h$counts/sum(h$counts)
plot(h,freq=FALSE, ylab = "Proportion", xlim = c(-5,5), ylim = c(0,1))
n <- 10000
truth <- 3/sqrt(n)
pC.success <- 0.25
pT.success <- pC.success + 3/sqrt(n)
estimate <- rep(0,nsim)
for (i in 1:nsim){
YC <- rbinom(n/2, size = 1, prob = pC.success)
YT <- rbinom(n/2, size = 1, prob = pT.success)
estimate[i] <- boundsNoCov_res(ordinalScale, YT, YC, maxBen, maxHarm)[1]
}
s <- sqrt(n)*(estimate - truth)
boxplot(s)
h <- hist(sqrt(n)*(estimate-truth))
h$density <- h$counts/sum(h$counts)
plot(h,freq=FALSE, ylab = "Proportion", xlim = c(-5,5), ylim = c(0,1))
n <- 10000
truth <- 3/sqrt(n)
pC.success <- 0.05
pT.success <- pC.success + 3/sqrt(n)
estimate <- rep(0,nsim)
for (i in 1:nsim){
YC <- rbinom(n/2, size = 1, prob = pC.success)
YT <- rbinom(n/2, size = 1, prob = pT.success)
estimate[i] <- boundsNoCov_res(ordinalScale, YT, YC, maxBen, maxHarm)[1]
}
s <- sqrt(n)*(estimate - truth)
boxplot(s)
h <- hist(sqrt(n)*(estimate-truth))
h$density <- h$counts/sum(h$counts)
plot(h,freq=FALSE, ylab = "Proportion", xlim = c(-5,5), ylim = c(0,1))
h <- hist(sqrt(n)*(estimate-truth), freq = TRUE)
~/.RData
setwd("~/.RData")
View(data)
?pnorm
pnorm(0.95,mean = 0,sd = 1)
qnorm(0.95,mean = 0,sd = 1)
qnorm(0.95,mean = 0,sd = 1)*0.7/sqrt(19)
rm(list=ls())
.83/(.7/sqrt(19))
qnorm(0.9,mean=0,sd=1)
qnorm(0.1,mean=0,sd=1)
qnorm(0.1,mean=0,sd=1)*2*0.7/0.3
5.980574^2
mu=0.3
mu0=0
sd=0.7
alpha=0.1
beta=0.1
(n=(sd*(qnorm(1-alpha)+qnorm(1-beta))/(mu-mu0))^2)
0.7/0.3*(1.2816*2)
(0.7/0.3*(1.2816*2))^2
30*1000
30*1000/60
30*1000/60/24
20*1000/60/24
25*1000/60/24
31017
31-17
11375+22624
370*4
13.18+13.40
33999+13
33999+13-6300
34012-6300
27712-4000
370*4
2135+1480
3615-3098
df <- function(s1,s2,n1,n2){
df <- (s1^2/n1 + s2^2/n2)^2
df <- df/(1/(n1-1)*(s1^2/n1)^2+(1/(n2-1))*(s2^2/n2)^2)
}
df(0.93,0.94,22,20)
df <- function(s1,s2,n1,n2){
val <- (s1^2/n1 + s2^2/n2)^2
val <- val/(1/(n1-1)*(s1^2/n1)^2+(1/(n2-1))*(s2^2/n2)^2)
return(val)
}
df(0.93,0.94,22,20)
s1 <- 5.9
s2 <- 10.8
n1 <- 35
n2 <- 52
x1bar <- 52.1
x2bar <- 72.5
df(s1,s2,n1,n2)
qt(0.975, 10^6, lower.tail = TRUE)
qt(0.975, 10^9, lower.tail = TRUE)
qt(0.975, 10^12, lower.tail = TRUE)
qt(0.5, 10^12, lower.tail = TRUE)
qt(0.975, 10^50, lower.tail = TRUE)
qt(0.975, 10^2, lower.tail = TRUE)
qt(0.975, 10^8, lower.tail = TRUE)
qt(0.975, 10^6, lower.tail = TRUE)
(100-94.5)/2
0.0275+.945
qt(0.9725, df, lower.tail = TRUE)
degF <- df(s1,s2,n1,n2)
qt(0.9725, degF, lower.tail = TRUE)
rm(list=ls())
df <- function(s1,s2,n1,n2){
val <- (s1^2/n1 + s2^2/n2)^2
val <- val/(1/(n1-1)*(s1^2/n1)^2+(1/(n2-1))*(s2^2/n2)^2)
return(val)
}
s1 <- 5.9
s2 <- 10.8
n1 <- 35
n2 <- 52
x1bar <- 52.1
x2bar <- 72.5
degF <- df(s1,s2,n1,n2)
tstar <- qt(0.9725, degF, lower.tail = TRUE)
marError <- tstar * sqrt(s1^2/n1+s2^2/n2)
x1bar - x2bar - marError
x1bar - x2bar + marError
(-3)/(10/sqrt(75))
pt(0, df=74, lower.tail = TRUE, log.p = FALSE)
tstat <- (-3)/(10/sqrt(75))
tstat
pt(tstat, df=74, lower.tail = TRUE, log.p = FALSE)
pt(tstat, df=74, lower.tail = TRUE, log.p = FALSE)*2
136-149
51-33
79-92
117-91
68-55
data <- c(-13,18,-13,26,13,18,40,9,16,1)
mean(data)
sd(data)
(1-0.914)/2
0.914+0.043
degF <- 9
tstar <- qt(0.957, degF, lower.tail = TRUE)
tstar
xbar <- mean(data)
s <- sd(data)
data <- c(-13,18,-13,26,13,18,40,9,16,1)
xbar <- mean(data)
s <- sd(data)
n <- 10
degF <- n-1
tstar <- qt(0.957, degF, lower.tail = TRUE)
tstar
marError <- tstar * s/sqrt(n)
xbar - marError
xbar + marError
xbar
rm(list=ls())
fem <- c(8000,10000,9500,8300,8200,8900,8400,8900,9700)
mal <- c(9200,9300,9200,9200,10500,9300,9100)
nfem <- length(fem)
nmal <- length(mal)
xf <- mean(fem)
xm <- mean(mal)
sf <- sd(fem)
sm <- sd(mal)
xf
xm
sf
sm
nfem
nmal
tstat <- (xf-sm)/sqrt(sf^2/nfem + sm^2/nmal)
tstat
df <- function(s1,s2,n1,n2){
val <- (s1^2/n1 + s2^2/n2)^2
val <- val/(1/(n1-1)*(s1^2/n1)^2+(1/(n2-1))*(s2^2/n2)^2)
return(val)
}
degF <- df(sf,sm,nfem,nmal)
degF
pt(tstat, df=degF, lower.tail = FALSE, log.p = FALSE)
pt(tstat, df=degF, lower.tail = FALSE, log.p = FALSE)*2
(1-0.975)/2
(1-0.975)/2+0.975
f <- c(2,4,1,2,3,2,4,5,3,2)
m <- c(5,4,4,4,4,4,7,6,5,3)
xf <- mean(f)
xm <- mean(m)
nf <- length(f)
nm <- length(m)
sf <- sd(f)
sm <- sd(m)
xf
xm
nm
nf
sf
sm
degF <- df(sf,sm,nf,nm)
degF
tstar <- qt(0.9875, degF, lower.tail = TRUE)
tstar
marError <- tstar * sqrt(sf^2/nf+sm^2/nm)
xf - xm - marError
xf - xm + marError
samp2 <- c(70,68,69,77,69,69,74,76)
samp1 <- c(70,69,70,73,64,64,65)
x2 <- mean(samp2)
x1 <- mean(samp1)
n2 <- length(samp2)
n1 <- length(samp1)
x2
x1
n2
n1
tstat <- (x2-x1)/sqrt(16/n2+16/n1)
tstat
?rnorm
?rnorm
zstat <- (x2-x1)/sqrt(16/n2+16/n1)
pval <- pnorm(zstat, df=74, lower.tail = TRUE, log.p = FALSE)
zstat <- (x2-x1)/sqrt(16/n2+16/n1)
zstat
pval <- pnorm(zstat, lower.tail = FALSE)
pval
rm(list=ls())
setwd("~/Desktop/RICV5_mofn_1000")
sum(frailtyData$outcome2 == 1, na.rm=TRUE)
archive_names <- dir()[grep(".Rdata", dir())]
length(archive_names) ##this should be 10000
is.even <- function(x) x %% 2 == 0
test <- unlist(strsplit(archive_names, "seed"))
head(test)
test <- test[is.even(1:length(test))]
test2 <- substr(test, start = 1, stop = 5)
head(test2)
test2 <- strsplit(test2, "-")
temp <- rep(NA, length(archive_names))
for (i in 1:length(archive_names)){
temp[i] <- test2[[i]][1]
}
temp <- as.numeric(temp)
temp <- sort(temp)
ref <- 1:10000
ref[which(!ref %in% temp)]
archive_names
tail(archive_names)
head(temp)
table(temp)
table(temp)==2
which(table(temp)==2)
head(archive_names)
rm(list=ls())
archive_names <- dir()[grep(".Rdata", dir())]
length(archive_names) ##this should be 10000
is.even <- function(x) x %% 2 == 0
test <- unlist(strsplit(archive_names, "seed"))
head(test)
test <- test[is.even(1:length(test))]
test2 <- substr(test, start = 1, stop = 5)
head(test2)
test2 <- strsplit(test2, "-")
temp <- rep(NA, length(archive_names))
for (i in 1:length(archive_names)){
temp[i] <- test2[[i]][1]
}
temp <- as.numeric(temp)
temp <- sort(temp)
ref <- 1:10000
ref[which(!ref %in% temp)]
nsim <- 10000
bounds.complete <- matrix(NA, nrow = nsim, ncol = 3)
LB.CI.complete <- matrix(NA, nrow = nsim, ncol = 3)
UB.CI.complete <- matrix(NA, nrow = nsim, ncol = 3)
for(i in 1:length(archive_names)){
load(archive_names[i])
bounds.complete[i,] <- bounds
LB.CI.complete[i,] <- LB.CI_mn
UB.CI.complete[i,] <- UB.CI_mn
}
bounds <- bounds.complete
LB.CI_mn <- LB.CI.complete
UB.CI_mn <- UB.CI.complete
setwd("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/allResults/RICV5")
save(bounds,LB.CI_mn,UB.CI_mn, file = "n1000_mofn.Rdata")
rm(list=ls())
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_1.Rdata")
b <- bounds
L <- LB.CI_mn
U <- UB.CI_mn
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_2.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_3.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_4.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_5.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_6.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_7.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_8.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_9.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
load("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/CI_mofn/RICV/results/N100_10.Rdata")
b <- rbind(b, bounds)
L <- rbind(L,LB.CI_mn)
U <- rbind(U,UB.CI_mn)
bounds <- b
LB.CI_mn <- L
UB.CI_mn <- U
setwd("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/allResults/RICV5")
save(bounds,LB.CI_mn,UB.CI_mn, file = "n100_mofn.Rdata")
library(xtable)
SE.fun <- function(x){sqrt(mean((x-mean(x))^2))}
setwd("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/allResults")
setwd("RICV5")
trueLB <- 0.8227513
trueUB <- 0.9629630
mat1 <- matrix(NA, nrow = 3, ncol = 4)
mat2 <- matrix(NA, nrow = 3, ncol = 8)
load("n100_nbootstrap.Rdata")
mat1[1,1] <- mean(bounds[,1])-trueLB
mat1[1,2] <- mean(bounds[,2])-trueUB
mat1[1,3] <- SE.fun(bounds[,1])
mat1[1,4] <- SE.fun(bounds[,2])
mat2[1,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[1,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[1,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[1,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n500_nbootstrap.Rdata")
mat1[2,1] <- mean(bounds[,1])-trueLB
mat1[2,2] <- mean(bounds[,2])-trueUB
mat1[2,3] <- SE.fun(bounds[,1])
mat1[2,4] <- SE.fun(bounds[,2])
mat2[2,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[2,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[2,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[2,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n1000_nbootstrap.Rdata")
mat1[3,1] <- mean(bounds[,1])-trueLB
mat1[3,2] <- mean(bounds[,2])-trueUB
mat1[3,3] <- SE.fun(bounds[,1])
mat1[3,4] <- SE.fun(bounds[,2])
mat2[3,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[3,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[3,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[3,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n100_mofn.Rdata")
mat2[1,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[1,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[1,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[1,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
load("n500_mofn.Rdata")
mat2[2,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[2,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[2,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[2,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
load("n1000_mofn.Rdata")
mat2[3,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[3,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[3,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[3,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
mat1_RICV <- mat1
mat2_RICV <- mat2
rm(mat1,mat2)
setwd("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/allResults")
setwd("binary_noRestrictions")
trueLB <- 0
trueUB <- 0.5
mat1 <- matrix(NA, nrow = 3, ncol = 4)
mat2 <- matrix(NA, nrow = 3, ncol = 8)
load("n100_nbootstrap.Rdata")
mat1[1,1] <- mean(bounds[,1])-trueLB
mat1[1,2] <- mean(bounds[,2])-trueUB
mat1[1,3] <- SE.fun(bounds[,1])
mat1[1,4] <- SE.fun(bounds[,2])
mat2[1,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[1,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[1,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[1,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n500_nbootstrap.Rdata")
mat1[2,1] <- mean(bounds[,1])-trueLB
mat1[2,2] <- mean(bounds[,2])-trueUB
mat1[2,3] <- SE.fun(bounds[,1])
mat1[2,4] <- SE.fun(bounds[,2])
mat2[2,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[2,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[2,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[2,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n1000_nbootstrap.Rdata")
mat1[3,1] <- mean(bounds[,1])-trueLB
mat1[3,2] <- mean(bounds[,2])-trueUB
mat1[3,3] <- SE.fun(bounds[,1])
mat1[3,4] <- SE.fun(bounds[,2])
mat2[3,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[3,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[3,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[3,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n100_mofn.Rdata")
mat2[1,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[1,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[1,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[1,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
load("n500_mofn.Rdata")
mat2[2,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[2,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[2,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[2,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
load("n1000_mofn.Rdata")
mat2[3,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[3,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[3,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[3,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
mat1_binNoRes <- mat1
mat2_binNoRes <- mat2
rm(mat1,mat2)
setwd("~/Dropbox/research/revisionsPostBiometrics/simulationStudies/allResults")
setwd("binary_noHarm")
trueLB <- 0
trueUB <- 0
mat1 <- matrix(NA, nrow = 3, ncol = 4)
mat2 <- matrix(NA, nrow = 3, ncol = 8)
load("n100_nbootstrap.Rdata")
mat1[1,1] <- mean(bounds[,1])-trueLB
mat1[1,2] <- mean(bounds[,2])-trueUB
mat1[1,3] <- SE.fun(bounds[,1])
mat1[1,4] <- SE.fun(bounds[,2])
mat2[1,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[1,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[1,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[1,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n500_nbootstrap.Rdata")
mat1[2,1] <- mean(bounds[,1])-trueLB
mat1[2,2] <- mean(bounds[,2])-trueUB
mat1[2,3] <- SE.fun(bounds[,1])
mat1[2,4] <- SE.fun(bounds[,2])
mat2[2,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[2,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[2,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[2,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n1000_nbootstrap.Rdata")
mat1[3,1] <- mean(bounds[,1])-trueLB
mat1[3,2] <- mean(bounds[,2])-trueUB
mat1[3,3] <- SE.fun(bounds[,1])
mat1[3,4] <- SE.fun(bounds[,2])
mat2[3,1] <- mean(trueLB <= LB.CI_perc[,2] & trueLB >= LB.CI_perc[,1])
mat2[3,2] <- mean(trueUB <= UB.CI_perc[,2] & trueUB >= UB.CI_perc[,1])
mat2[3,5] <- mean(LB.CI_perc[,2]-LB.CI_perc[,1])
mat2[3,6] <- mean(UB.CI_perc[,2]-UB.CI_perc[,1])
load("n100_mofn.Rdata")
mat2[1,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[1,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[1,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[1,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
load("n500_mofn.Rdata")
mat2[2,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[2,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[2,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[2,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
load("n1000_mofn.Rdata")
mat2[3,3] <- mean(trueLB <= LB.CI_mn[,2] & trueLB >= LB.CI_mn[,1])
mat2[3,4] <- mean(trueUB <= UB.CI_mn[,2] & trueUB >= UB.CI_mn[,1])
mat2[3,7] <- mean(LB.CI_mn[,2]-LB.CI_mn[,1])
mat2[3,8] <- mean(UB.CI_mn[,2]-UB.CI_mn[,1])
mat1_binNoHarm <- mat1
mat2_binNoHarm <- mat2
rm(mat1,mat2)
###################################################################################################
##Concatenate the results##
###################################################################################################
mat1 <- rbind(mat1_RICV,mat1_binNoRes,mat1_binNoHarm)
mat2 <- rbind(mat2_RICV,mat2_binNoRes,mat2_binNoHarm)
mat1 <- data.frame(mat1)
mat2 <- data.frame(mat2)
table1A <- xtable(mat1, align = "ccccc")
table1B <- xtable(mat2, align = "ccccccc")
digits(table1A) <- 3
digits(table1B) <- 3
print(table1A)
print(table1B)
library(xtable)
mat1 <- rbind(mat1_RICV,mat1_binNoRes,mat1_binNoHarm)
mat2 <- rbind(mat2_RICV,mat2_binNoRes,mat2_binNoHarm)
mat1 <- data.frame(mat1)
mat2 <- data.frame(mat2)
mat1
mat2
table1A <- xtable(mat1, align = "ccccc")
table1B <- xtable(mat2, align = "ccccccccc")
digits(table1A) <- 3
digits(table1B) <- 3
print(table1A)
print(table1B)
rm(list=ls())
